<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SixCloud.Views.UserControls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:controls="clr-namespace:SixCloudCustomControlLibrary.Controls;assembly=SixCloudCustomControlLibrary"
             xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:ViewModels="clr-namespace:SixCloud.ViewModels" x:Class="SixCloud.Views.UserControls.FileListView"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="#FFF3F2F1">
    <UserControl.Resources>
        <ViewModels:HidingSizeinfoForDirectoryConverter x:Key="HidingSizeinfoForDirectoryConverter"/>
        <Converters:BrushRoundConverter x:Key="BrushRoundConverter" HighValue="White" LowValue="Black"/>

        <Style TargetType="{x:Type controls:FontIcon}">
            <Setter Property="IconSize" Value="14"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <DataTemplate x:Key="MetaName">
            <StackPanel Orientation="Horizontal" x:Name="MetaNameContainer">
                <controls:FontIcon Foreground="{DynamicResource PrimaryHueMidBrush}" IconSize="24" Margin="4" Icon="{Binding Icon}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <controls:RenamableTextBox x:Name="NameBox" HorizontalAlignment="Left" VerticalAlignment="Center" CurrentName="{Binding Name, Mode=OneTime}" Command="{Binding ConfirmCommand}" CommandParameter="{Binding CurrentName, RelativeSource={RelativeSource Self}}"/>
                <controls:LightButton Margin="5" FontIcon="&#xF063;" FontSize="12" Visibility="Collapsed" x:Name="DownloadBotton" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding DownloadCommand}"/>
                <controls:LightButton Margin="5" FontIcon="&#xF141;" FontSize="12" Visibility="Collapsed" x:Name="MoreBotton" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding MoreCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                    <controls:LightButton.ContextMenu>
                        <ContextMenu x:Name="MoreButtonMenu" Background="{DynamicResource PrimaryHueMidBrush}" Foreground="White">
                            <MenuItem x:Name="Cut" Header="剪切" Command="{Binding CutCommand}">
                                <MenuItem.Icon>
                                    <controls:FontIcon Icon="&#xF0C4;"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem x:Name="Copy" Header="复制" Command="{Binding CopyCommand}">
                                <MenuItem.Icon>
                                    <controls:FontIcon Icon="&#xF0C5;"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem x:Name="Rename" Header="重命名" Command="{Binding RenameCommand}">
                                <MenuItem.Icon>
                                    <controls:FontIcon Icon="&#xF079;"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem x:Name="Delete" Header="删除" Command="{Binding DeleteCommand}">
                                <MenuItem.Icon>
                                    <controls:FontIcon Icon="&#xF1F8;"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </controls:LightButton.ContextMenu>
                </controls:LightButton>
            </StackPanel>
            <DataTemplate.Triggers>
                <!--选中时显示附加按钮-->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="True"/>
                        <Condition Binding="{Binding Directory}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="DownloadBotton" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="NameBox" Property="TextAreaWidth" Value="{Binding ActualWidth, ElementName=WidthHelperRenameTextBox, Mode=OneWay}"/>
                    <Setter TargetName="MoreBotton" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="MetaSize">
            <StackPanel Orientation="Horizontal">
                <TextBlock Foreground="#FF5A5A5A" Text="{Binding Size}" Visibility="{Binding Directory, Converter={StaticResource HidingSizeinfoForDirectoryConverter}, Mode=OneWay}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="MetaMTime">
            <StackPanel Orientation="Horizontal">
                <TextBlock Foreground="#FF5A5A5A" Text="{Binding MTime}"/>
            </StackPanel>
        </DataTemplate>


        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <!--<EventSetter Event="Selected" Handler="ListBoxItem_Selected"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="{TemplateBinding Margin}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.03" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Border x:Name="MouseOverBorder" Opacity="0" Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                                <Border x:Name="SelectedBorder" Opacity="0" RenderTransformOrigin="0.5,0.5" Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}">
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="1"/>
                                    </Border.RenderTransform>
                                </Border>
                                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Border" BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ListViewAssist.ListViewItemPadding), RelativeSource={RelativeSource Self}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <GridViewRowPresenter Columns="{TemplateBinding GridView.ColumnCollection}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="Control.MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.56"/>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Grid>
        <!--地址栏-->
        <ListBox FontSize="12" x:Name="AddressBar" Margin="0,32,0,0" Height="24" VerticalAlignment="Top" BorderBrush="Black" ItemsSource="{Binding PathArray}" SelectionChanged="AddressBar_SelectionChanged">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Margin="5,0">
                        <TextBlock Foreground="#FF5A5A5A" Text="{Binding DataContext, RelativeSource={RelativeSource Self}}" FontWeight="Bold"/>
                        <controls:FontIcon Icon="&#xF054;" Foreground="#FF5A5A5A" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!--上方栏-->
        <Grid Height="60" Margin="0,56,0,0" VerticalAlignment="Top">

            <controls:LightButton FontIcon="&#xF053;" Margin="20,0,0,0" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FF5A5A5A" x:Name="Previous" Command="{Binding PreviousNavigateCommand}"/>

            <controls:LightButton FontIcon="&#xF054;" Margin="40,0,0,0" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FF5A5A5A" x:Name="Next" Command="{Binding NextNavigateCommand}"/>

            <StackPanel Orientation="Horizontal" Margin="96,0,0,0">
                <Button x:Name="UploadButton" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0" Command="{Binding UploadFileCommand}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <controls:FontIcon Icon="&#xF574;" Foreground="#FF5A5A5A"/>
                        <TextBlock Text="上传文件" Foreground="#FF5A5A5A" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button x:Name="UploadFolderButton" HorizontalAlignment="Left" VerticalAlignment="Center" Width="125" Margin="5,0"  Command="{Binding UploadFolderCommand}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <controls:FontIcon Icon="&#xF093;" Foreground="#FF5A5A5A"/>
                        <TextBlock Text="上传文件夹" Foreground="#FF5A5A5A"/>
                    </StackPanel>
                </Button>
                <Button x:Name="NewFolderButton" HorizontalAlignment="Left" Width="125" VerticalAlignment="Center" Margin="5,0" Command="{Binding NewFolderCommand}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <controls:FontIcon Icon="&#xF65E;" Foreground="#FF5A5A5A"/>
                        <TextBlock Text="新建文件夹" Foreground="#FF5A5A5A"/>
                    </StackPanel>
                </Button>
                <Button x:Name="Delete" HorizontalAlignment="Left" Width="81" VerticalAlignment="Center" Margin="5,0" Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedItems, ElementName=FileList}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <controls:FontIcon Icon="&#xF1F8;" Foreground="#FF5A5A5A"/>
                        <TextBlock Text="删除" Foreground="#FF5A5A5A"/>
                    </StackPanel>
                </Button>
                <Button x:Name="Cut" HorizontalAlignment="Left" Width="81" VerticalAlignment="Center" Margin="5,0" Command="{Binding CutCommand}" CommandParameter="{Binding SelectedItems, ElementName=FileList}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <controls:FontIcon Icon="&#xF0C4;" Foreground="#FF5A5A5A"/>
                        <TextBlock Text="剪切" Foreground="#FF5A5A5A"/>
                    </StackPanel>
                </Button>
                <Button x:Name="Copy" HorizontalAlignment="Left" Width="81" VerticalAlignment="Center" Margin="5,0" Command="{Binding CopyCommand}" CommandParameter="{Binding SelectedItems, ElementName=FileList}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <controls:FontIcon Icon="&#xF0C5;" Foreground="#FF5A5A5A"/>
                        <TextBlock Text="复制" Foreground="#FF5A5A5A"/>
                    </StackPanel>
                </Button>
                <Button x:Name="Stick" HorizontalAlignment="Left" Width="81" VerticalAlignment="Center" Margin="5,0" Command="{Binding StickCommand}" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <controls:FontIcon Icon="&#xF46C;" Foreground="#FF5A5A5A"/>
                        <TextBlock Text="粘贴" Foreground="#FF5A5A5A"/>
                    </StackPanel>
                </Button>

            </StackPanel>

        </Grid>
        <Rectangle Margin="0,116,0,0" Fill="White"/>
        <ListView SelectedIndex="{Binding SelectedIndex, Mode=OneWayToSource}" ScrollViewer.ScrollChanged="FileList_ScrollChanged" x:Name="FileList" Margin="0,116,0,0" ItemsSource="{Binding FileList}" ItemContainerStyle="{DynamicResource ListViewItemStyle}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperFlieName, Mode=OneWay}" CellTemplate="{StaticResource MetaName}" Header="文件名" />
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperFileSize}" CellTemplate="{StaticResource MetaSize}" Header="大小"/>
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperMTime}" CellTemplate="{StaticResource MetaMTime}" Header="修改时间"/>
                </GridView>
            </ListView.View>
        </ListView>

        <!--这个Grid用于帮助GridView自动校正分栏宽度-->
        <Grid Visibility="Hidden">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Grid.ColumnSpan="2" x:Name="WidthHelperFlieName"/>
            <Grid Grid.Column="0" x:Name="WidthHelperRenameTextBox"/>
            <Grid Grid.Column="2" x:Name="WidthHelperFileSize"/>
            <Grid Grid.Column="3" x:Name="WidthHelperMTime"/>
        </Grid>

    </Grid>
</UserControl>
