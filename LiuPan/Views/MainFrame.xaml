<metro:MetroWindow x:Class="SixCloud.Views.MainFrame"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:SixCloud.Views"
    xmlns:metro="clr-namespace:SixCloudCustomControlLibrary.Controls;assembly=SixCloudCustomControlLibrary"
    xmlns:usercontrols="clr-namespace:SixCloud.Views.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    mc:Ignorable="d"
    MinHeight="720" MinWidth="1366" MetroWindowLayout="WideAngle">
    <metro:MetroWindow.Resources>
        <Converters:BrushRoundConverter x:Key="BrushRoundConverter" HighValue="White" LowValue="Black"/>

        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="#FF5A5A5A"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="CheckedMask" Background="Transparent">
                                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                   Content="{TemplateBinding Content}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                   HorizontalContentAlignment="Left" 
                                                   VerticalContentAlignment="Stretch"
                                                   RecognizesAccessKey="True"
                                                   Focusable="False"
                                                   Padding="9">
                                    <materialDesign:Ripple.Feedback>
                                        <TemplateBinding Property="Foreground" Converter="{StaticResource BrushRoundConverter}"/>
                                    </materialDesign:Ripple.Feedback>
                                </materialDesign:Ripple>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckedMask" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="LightGray" Duration="00:00:00.250"/>
                                            <!--<ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="White" Duration="00:00:00.250"/>-->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckedMask" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" Duration="00:00:00.250"/>
                                            <!--<ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="#FF5A5A5A" Duration="00:00:00.250"/>-->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckedMask" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="LightGray" Duration="00:00:00" AutoReverse="True"/>
                                            <!--<ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="White" Duration="00:00:00"/>-->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <Setter Property="Background" TargetName="CheckedMask" Value="#FFF3F2F1"/>
                                <!--<Setter Property="Foreground" Value="White"/>-->
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </metro:MetroWindow.Resources>
    <metro:MetroWindow.HeaderControl>
        <metro:LightButton Click="LightButton_Click" FontIcon="&#xf013;" Foreground="{DynamicResource PrimaryHueDarkBrush}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,15,0"/>
    </metro:MetroWindow.HeaderControl>
    <Grid MouseUp="Grid_MouseUp">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="280"/>
            <ColumnDefinition Width="15"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <metro:LightTabControl SelectedIndex="1" Grid.ColumnSpan="3" Grid.RowSpan="3">
            <metro:LightTabItem FontIcon="&#xf360;" Header="传输">
                <usercontrols:TransferListView DataContext="{Binding TransferList}"/>
            </metro:LightTabItem>

            <!--文件列表-->
            <metro:LightTabItem FontIcon="&#xf07b;" Header="文件">
                <Grid Background="#FFF3F2F1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="280"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.RowSpan="4" Background="White"/>
                    
                    <!--NavigateBar窗格-->
                    <StackPanel Grid.Row="1">
                        <RadioButton FontSize="14" Command="{Binding PathNavigateCommand}" CommandParameter="" IsChecked="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="25"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <metro:FontIcon Grid.Column="1" Icon="&#xf0a0;" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Column="2" Text="全部文件"/>
                            </Grid>
                        </RadioButton>
                        <!--<RadioButton FontSize="14" Content="图片收藏" Command="{Binding PathNavigateCommand}" CommandParameter="Images"/>
                        <RadioButton FontSize="14" Content="视频收藏" Command="{Binding PathNavigateCommand}" CommandParameter="Videos"/>
                        <RadioButton FontSize="14" Content="音乐收藏" Command="{Binding PathNavigateCommand}" CommandParameter="Music"/>
                        <RadioButton FontSize="14" Content="文档收藏" Command="{Binding PathNavigateCommand}" CommandParameter="Documents"/>-->
                        <RadioButton FontSize="14" Command="{Binding PathNavigateCommand}" CommandParameter="Recovery">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="25"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <metro:FontIcon Grid.Column="1" Icon="&#xf1f8;" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Column="2" Text="回收站"/>
                            </Grid>
                        </RadioButton>
                        <StackPanel.Triggers>
                            <EventTrigger RoutedEvent="RadioButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="00:00:00.300"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </StackPanel.Triggers>
                    </StackPanel>
                    
                    <StackPanel Margin="15,0,0,0" Grid.Row="2">
                        <usercontrols:FileListItemInformationView DataContext="{Binding FileList.FileListItemInformation}"/>
                    </StackPanel>
                    
                    <!--主文件列表窗格 Margin不能低于0/32/0/0-->
                    <Grid Margin="25,35,25,35" Grid.Column="1" Grid.RowSpan="4">
                        <usercontrols:FileListView x:Name="MainContainer" DataContext="{Binding FileList}" DataContextChanged="MainContainer_DataContextChanged"/>
                        <Grid.RenderTransform>
                            <TranslateTransform x:Name="MainContainerTransform"/>
                        </Grid.RenderTransform>
                    </Grid>
                </Grid>
            </metro:LightTabItem>

            <!--分享功能（V1接口未实现）-->
            <!--<metro:LightTabItem Icon="&#xf1e0;" Header="分享设置"/>-->
        </metro:LightTabControl>
        
        <!--点击头像后出现的ContextMenu-->
        <Border x:Name="UserInformationMenu" DataContext="{Binding UserInformation}" Grid.Column="1" Grid.Row="1" CornerRadius="5" Background="White" Visibility="Collapsed" MouseUp="UserInformationMenu_MouseUp">
            <Grid>
                <Grid.RowDefinitions>
                    <!--头像和用户名-->
                    <RowDefinition Height="Auto"/>
                    <!--使用空间信息-->
                    <RowDefinition Height="Auto"/>
                    <!--密码相关-->
                    <RowDefinition Height="Auto"/>
                    <!--登陆注销相关-->
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="10"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <!--头像-->
                    <Border Grid.Row="0" CornerRadius="5" Margin="5" BorderThickness="1" Width="75" Height="75">
                        <Border.Background>
                            <ImageBrush ImageSource="{Binding Icon,Mode=OneTime}" Stretch="UniformToFill"/>
                        </Border.Background>
                    </Border>
                    <!--用户名-->
                    <StackPanel Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock x:Name="textBlock" Text="{Binding Name,Mode=OneTime}" HorizontalAlignment="Center" Foreground="#FF5A5A5A" FontSize="18" Margin="0,5"/>
                        <Button Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding ChangeUserNameCommand}" Content="修改用户名"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1">
                    <ProgressBar Value="{Binding AvailableRate}" Height="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"/>
                    <TextBlock Text="{Binding FrendlySpaceCapacity}" FontSize="12" Margin="5" Foreground="#FF5A5A5A" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
                <Button Style="{DynamicResource MaterialDesignFlatButton}" Grid.Row="2" Content="修改密码" Command="{Binding ChangePasswordCommand}" Foreground="#FF5A5A5A" Margin="0,5,0,0"/>
                <Button Style="{DynamicResource MaterialDesignFlatButton}" Grid.Row="3" Content="注销登录" Command="{Binding LogoutCommand}" Foreground="#FF5A5A5A"/>
            </Grid>
            <Border.Effect>
                <DropShadowEffect ShadowDepth="0" BlurRadius="10"/>
            </Border.Effect>
        </Border>
    </Grid>
</metro:MetroWindow>
