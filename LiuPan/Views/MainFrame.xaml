<metro:MetroWindow x:Class="SixCloud.Views.MainFrame"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:SixCloud.Views"
    xmlns:metro="clr-namespace:SixCloudCustomControlLibrary.Controls;assembly=SixCloudCustomControlLibrary"
    xmlns:usercontrols="clr-namespace:SixCloud.Views.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    mc:Ignorable="d"
    MinHeight="720" MinWidth="1080" MetroWindowLayout="WideAngle">
    <metro:MetroWindow.Resources>
        <Converters:BrushRoundConverter x:Key="BrushRoundConverter" HighValue="White" LowValue="Black"/>

        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="#FF5A5A5A"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="CheckedMask" Background="Transparent">
                                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                   Content="{TemplateBinding Content}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                   HorizontalContentAlignment="Center" 
                                                   VerticalContentAlignment="Stretch"
                                                   RecognizesAccessKey="True"
                                                   Focusable="False"
                                                   Padding="5">
                                    <materialDesign:Ripple.Feedback>
                                        <TemplateBinding Property="Foreground" Converter="{StaticResource BrushRoundConverter}"/>
                                    </materialDesign:Ripple.Feedback>
                                </materialDesign:Ripple>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckedMask" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="LightGray" Duration="00:00:00.250"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="White" Duration="00:00:00.250"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckedMask" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" Duration="00:00:00.250"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="#FF5A5A5A" Duration="00:00:00.250"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckedMask" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="LightGray" Duration="00:00:00" AutoReverse="True"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="White" Duration="00:00:00"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <Setter Property="Background" TargetName="CheckedMask" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </metro:MetroWindow.Resources>
    <Grid>
        <metro:LightTabControl SelectedIndex="1">
            <metro:LightTabItem FontIcon="&#xf360;" Header="传输">
                <usercontrols:TransferListView DataContext="{Binding TransferList}"/>
            </metro:LightTabItem>
            
            <!--文件列表-->
            <metro:LightTabItem FontIcon="&#xf07b;" Header="文件">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="105"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <!--用户信息窗格-->
                    <!--<usercontrols:UserInformationView DataContext="{Binding UserInformation}"/>-->
                    <!--NavigateBar窗格-->
                    <StackPanel Grid.Row="2">
                        <RadioButton FontSize="14" Content="全部文件" Command="{Binding PathNavigateCommand}" CommandParameter=""/>
                        <!--<RadioButton FontSize="14" Content="图片收藏" Command="{Binding PathNavigateCommand}" CommandParameter="Images"/>
                        <RadioButton FontSize="14" Content="视频收藏" Command="{Binding PathNavigateCommand}" CommandParameter="Videos"/>
                        <RadioButton FontSize="14" Content="音乐收藏" Command="{Binding PathNavigateCommand}" CommandParameter="Music"/>
                        <RadioButton FontSize="14" Content="文档收藏" Command="{Binding PathNavigateCommand}" CommandParameter="Documents"/>-->
                        <RadioButton FontSize="14" Content="回收站" Command="{Binding PathNavigateCommand}" CommandParameter="Recovery"/>
                    </StackPanel>
                    <StackPanel Grid.Row="3">
                        <TextBlock Margin="10,0" Text="搜索文件" FontWeight="Bold" FontSize="16" Foreground="#FF5A5A5A"/>
                        <TextBox Background="#FFF1F2F4" FontSize="14" Margin="10" Foreground="#FF5A5A5A" materialDesign:HintAssist.Hint="输入关键字" Text="{Binding SearchWords,Mode=OneWayToSource}"/>
                        <metro:LightButton FontIcon="&#xf002;" Command="{Binding PathNavigateCommand}" CommandParameter="Search"/>
                    </StackPanel>
                    <!--主文件列表窗格-->
                    <Grid Grid.Column="1" Grid.RowSpan="4">
                        <usercontrols:FileListView x:Name="MainContainer" DataContext="{Binding FileList}" DataContextChanged="MainContainer_DataContextChanged"/>
                        <Grid.RenderTransform>
                            <TranslateTransform x:Name="MainContainerTransform"/>
                        </Grid.RenderTransform>
                    </Grid>
                </Grid>
            </metro:LightTabItem>
            
            <!--分享功能（V1接口未实现）-->
            <!--<metro:LightTabItem Icon="&#xf1e0;" Header="分享设置"/>-->
        </metro:LightTabControl>
    </Grid>
</metro:MetroWindow>
