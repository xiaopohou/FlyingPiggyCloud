<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SixCloudCore.Views.UserControls"
             xmlns:controls="clr-namespace:CustomControls.Controls;assembly=SixCloudCoreCustomControlLibrary"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:ViewModels="clr-namespace:SixCloudCore.ViewModels" x:Name="userControl"
             x:Class="SixCloudCore.Views.UserControls.FileGridView"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ViewModels:HidingSizeinfoForDirectoryConverter x:Key="HidingSizeinfoForDirectoryConverter"/>
        <ViewModels:TooLongStringConverter x:Key="TooLongStringConverter"/>
        <local:GridViewContextMenuAvailableConverter x:Key="GridViewContextMenuAvailableConverter"/>

        <Style TargetType="{x:Type controls:FontIcon}">
            <Setter Property="IconSize" Value="14"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <!--<EventSetter Event="Selected" Handler="ListBoxItem_Selected"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="{TemplateBinding Margin}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.03" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Border x:Name="MouseOverBorder" Opacity="0" Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                                <Border x:Name="SelectedBorder" Opacity="0" RenderTransformOrigin="0.5,0.5" Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}">
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="1"/>
                                    </Border.RenderTransform>
                                </Border>
                                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ItemsPanelTemplate x:Key="ListBoxItemsPanel">
            <WrapPanel IsItemsHost="True" Width="{Binding RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=ActualWidth}"/>
        </ItemsPanelTemplate>

        <DataTemplate x:Key="FileCell">
            <Grid Height="100" Width="200" IsEnabled="{Binding Mode, Converter={StaticResource GridViewContextMenuAvailableConverter}, ElementName=userControl, Mode=OneTime}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <controls:FontIcon Margin="15" Grid.Column="0" Grid.RowSpan="3" Icon="{Binding Icon}" IconSize="40" Foreground="{DynamicResource ImmersiveSystemAccentBrushDark2}"/>
                <TextBlock Text="{Binding Name, Converter={StaticResource TooLongStringConverter}, Mode=OneWay}"
                           TextWrapping="WrapWithOverflow"
                           Grid.Column="1"
                           Grid.Row="0"
                           Margin="15"
                           FontSize="12"
                           TextAlignment="Left"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MaterialDesignListBoxItem}">
            <EventSetter Event="Control.MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
            <Setter Property="ToolTip">
                <Setter.Value>
                    <ToolTip >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Foreground="White" Text="文件大小：" Visibility="{Binding Directory, Converter={StaticResource HidingSizeinfoForDirectoryConverter}, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <TextBlock Foreground="White" Text="修改时间：" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="1"/>
                            <TextBlock Foreground="White" Text="{Binding Size}" Visibility="{Binding Directory, Converter={StaticResource HidingSizeinfoForDirectoryConverter}, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1"/>
                            <TextBlock Foreground="White" Text="{Binding MTime}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </ToolTip>
                </Setter.Value>
            </Setter>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu x:Name="GridViewContextMenu" Background="{DynamicResource MainForegroundBrush}" Foreground="White">
                        <MenuItem x:Name="Cut" Header="剪切" Command="{Binding CutCommand}">
                            <MenuItem.Icon>
                                <controls:FontIcon Icon="&#xF0C4;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="Copy" Header="复制" Command="{Binding CopyCommand}">
                            <MenuItem.Icon>
                                <controls:FontIcon Icon="&#xF0C5;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="Rename" Header="重命名" Command="{Binding RenameCommand}">
                            <MenuItem.Icon>
                                <controls:FontIcon Icon="&#xF079;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="Delete" Header="删除" Command="{Binding DeleteCommand}">
                            <MenuItem.Icon>
                                <controls:FontIcon Icon="&#xF1F8;"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Mode, ElementName=userControl}" Value="PathSelector">
                    <Setter Property="ContextMenu" Value="{x:Null}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <!--地址栏-->
        <ListBox Background="Transparent" BorderThickness="0" FontSize="12" Height="24" x:Name="AddressBar" VerticalAlignment="Top" ItemsSource="{Binding PathArray}" SelectionChanged="AddressBar_SelectionChanged">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Margin="5,0">
                        <TextBlock Foreground="{DynamicResource MainForegroundBrush}" Text="{Binding DataContext, RelativeSource={RelativeSource Self}}" FontWeight="Bold"/>
                        <controls:FontIcon Foreground="{DynamicResource MainForegroundBrush}" Icon="&#xF054;"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>



        <ListBox x:Name="MainList"
                 Grid.Row="1"
                 ItemsPanel="{DynamicResource ListBoxItemsPanel}"
                 ItemsSource="{Binding FileList}"
                 ItemTemplate="{DynamicResource FileCell}"
                 SelectedItem="{Binding SelectObject, ElementName=userControl, Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}"
                 ScrollViewer.ScrollChanged="MainList_ScrollChanged" ItemContainerStyle="{DynamicResource ListBoxItemStyle}"/>
    </Grid>
</UserControl>
