<UserControl x:Class="SixCloud.Core.Views.MainFrame"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:local="clr-namespace:SixCloud.Core.Views"
                  xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                  xmlns:metro="clr-namespace:CustomControls.Controls;assembly=SixCloudCoreCustomControlLibrary"
                  xmlns:usercontrols="clr-namespace:SixCloud.Core.Views.UserControls"
                  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                  xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                  xmlns:vm="clr-namespace:SixCloud.Core.ViewModels"
                  xmlns:animation="clr-namespace:SourceChord.FluentWPF.Animations;assembly=FluentWPF"
                  xmlns:brush="clr-namespace:CustomControls.BrushExtensions;assembly=SixCloudCoreCustomControlLibrary"
                  mc:Ignorable="d" fw:PointerTracker.Enabled="True">
    <UserControl.Resources>
        <Converters:BrushRoundConverter x:Key="BrushRoundConverter" HighValue="White" LowValue="Black"/>

        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MaterialDesignToolToggleListBoxItem}">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource AcrylicMenuItemStyle}">
            <Setter Property="Template" Value="{StaticResource AcrylicMenuItemTemplateStyle}"/>
        </Style>

        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="20,5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="mainBorder">
                            <Border.BorderBrush>
                                <brush:RevealBorderBrush Color="#FF5A5A5A"/>
                            </Border.BorderBrush>
                            <Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                <Rectangle HorizontalAlignment="Left" Margin="-1,7" Width="3" Fill="{DynamicResource ImmersiveSystemAccentBrush}" Visibility="Collapsed" x:Name="checkedSign"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="mainBorder" Value="#555A5A5A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="mainBorder" Value="#AA5A5A5A"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="checkedSign" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid Background="{DynamicResource MainBackgroundBrush}">
        <TabControl BorderThickness="0" Background="{DynamicResource MainBackgroundBrush}" ItemContainerStyle="{StaticResource TabItemStyle}" Button.Click="TabControl_Click">
            <TabControl.Template>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <TabPanel Margin="10" Grid.Row="0" Grid.Column="0" x:Name="headerPanel" IsItemsHost="true"/>

                        <StackPanel DataContext="{Binding UserInformation}"
                                    MaxHeight="40" Orientation="Horizontal" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right">
                            <Image Source="{Binding Icon}"/>
                            <Button x:Name="contextMenuButton" Height="40" Width="40" Focusable="True">
                                <metro:FontIcon Icon="&#xf141;"/>
                            </Button>
                        </StackPanel>

                        <ContentPresenter Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1"  x:Name="content" ContentSource="SelectedContent"/>
                    </Grid>
                </ControlTemplate>
            </TabControl.Template>
            <!--文件列表-->
            <TabItem IsSelected="True" DataContext="{Binding FileVM}" Header="所有文件">
                <Grid Margin="0,15,15,15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="320"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="0" Grid.Column="0">
                        <RadioButton Command="{Binding NavigateCommand}" CommandParameter="/" Content="所有文件" IsChecked="True"/>
                        <RadioButton Command="{Binding NavigateCommand}" CommandParameter="Video" Content="所有视频"/>
                        <RadioButton Command="{Binding NavigateCommand}" CommandParameter="Audio" Content="所有音频"/>
                        <RadioButton Command="{Binding NavigateCommand}" CommandParameter="Image" Content="所有图片"/>
                    </StackPanel>
                    <usercontrols:FileListItemInformationView Background="{DynamicResource MainBackgroundBrush}" HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" x:Name="InfoView" DataContext="{Binding FileListItemInformation}"/>
                    <usercontrols:FileListView x:Name="FileListContainer" Grid.Column="1" Grid.RowSpan="2"/>
                </Grid>
            </TabItem>

            <TabItem DataContext="{Binding RecVM}" Header="回收中心">
                <usercontrols:RecoveryBox Margin="15" x:Name="RecoveryBoxContainer"/>
            </TabItem>

            <!--离线下载列表-->
            <TabItem Header="离线任务">
                <usercontrols:OfflineTaskListView DataContext="{Binding OfflineTask}" Margin="15"/>
            </TabItem>

            <!--整合全部传输项目的列表-->
            <TabItem Header="传输列表">
                <usercontrols:TransferListView DataContext="{Binding TransferList}" Margin="15"/>
            </TabItem>
        </TabControl>

        <Border Margin="0,50,0,0"
                DataContext="{Binding UserInformation}"
                BorderBrush="{DynamicResource ImmersiveSystemAccentBrush}" 
                BorderThickness="1"
                Background="White"
                x:Name="contextMenu" Height="0" Width="280" HorizontalAlignment="Right" VerticalAlignment="Top" MouseDown="ContextMenu_MouseDown">
            <StackPanel>
                <Grid Background="LightGray" Height="200" Width="280">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" FontSize="20" VerticalAlignment="Bottom" Text="{Binding Name}" Margin="15"/>
                    <TextBlock Grid.Row="1" FontSize="14" VerticalAlignment="Bottom" Text="{Binding FriendlyVipExpireTime}" Margin="15"/>
                    <ProgressBar Grid.Row="2" VerticalAlignment="Top" Value="{Binding AvailableRate}" Style="{StaticResource ProgressBarStyle}" Margin="15" Background="LightGray"/>
                    <TextBlock Grid.Row="3" FontSize="14" VerticalAlignment="Bottom" Text="{Binding FrendlySpaceCapacity}" Margin="15"/>
                </Grid>
                <Button Content="修改用户名" Command="{Binding ChangeUserNameCommand}" Height="50" Width="280"/>
                <Button Content="会员续费" Command="{Binding RenewalCommand}" Height="50" Width="280"/>
                <Button Content="修改密码" Command="{Binding ChangePasswordCommand}" Height="50" Width="280"/>
                <Button Content="注销登录" Command="{Binding LogoutCommand}" Height="50" Width="280"/>
                <Button Content="关于软件" Command="{Binding AboutCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Height="50" Width="280"/>
            </StackPanel>
        </Border>
        <Grid.Triggers>
            <EventTrigger RoutedEvent="Button.Click">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00.200" To="450" Storyboard.TargetName="contextMenu" Storyboard.TargetProperty="Height">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00.200" To="0" Storyboard.TargetName="contextMenu" Storyboard.TargetProperty="Height">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseIn"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

        </Grid.Triggers>
    </Grid>
</UserControl>
