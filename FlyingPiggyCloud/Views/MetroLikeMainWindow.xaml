<metro:MetroWindow
        xmlns:metro="clr-namespace:Arthas.Controls.Metro;assembly=Arthas"
        x:Class="FlyingPiggyCloud.Views.MetroLikeMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FlyingPiggyCloud.Views"
        mc:Ignorable="d"
        Title="MetroLikeMainWindow" Height="450" Width="800">
    <metro:MetroWindow.Resources>
        <ResourceDictionary>
            

            <Style TargetType="metro:MetroMenuTabItem">
                <!--<Setter Property="Margin" Value="10,0"/>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type metro:MetroMenuTabItem}">
                            <Border Name="back" Margin="10,0" CornerRadius="5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="iconWidth" Width="Auto"/>
                                        <ColumnDefinition x:Name="contentWidth"/>
                                    </Grid.ColumnDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="back"/>
                                                    <ColorAnimation Duration="0:0:0.2" To="#A5000000" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="title"/>
                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="icon"/>
                                                    <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="iconMove"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed"/>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Image x:Name="iconMove" Height="16" Margin="10,5,5,5" Opacity="0" Source="{TemplateBinding IconMove}" Width="15"/>
                                    <Image x:Name="icon" Height="16" Margin="10,5,5,5" Source="{TemplateBinding Icon}" Width="15"/>
                                    <metro:MetroTextBlock x:Name="title" Grid.Column="2" Foreground="#FF222222" HorizontalAlignment="Left" Text="{TemplateBinding Header}" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" TargetName="back" Value="{DynamicResource ResourceKey=MainFocusColorBrush}"/>
                                    <Setter Property="Foreground" TargetName="title" Value="#FFFFFFFF"/>
                                    <Setter Property="Opacity" TargetName="icon" Value="0"/>
                                    <Setter Property="Opacity" TargetName="iconMove" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </metro:MetroWindow.Resources>

    <metro:MetroMenuTabControl Name="LeftBar" BorderBrush="#FFE3E4E8">
        <metro:MetroMenuTabItem Header="全部文件">

        </metro:MetroMenuTabItem>
        <metro:MetroMenuTabItem Header="图片">

        </metro:MetroMenuTabItem>
        <metro:MetroMenuTabItem Header="视频">

        </metro:MetroMenuTabItem>

        <metro:MetroMenuSeparator/>


        <metro:MetroMenuTabItem Icon="/Resources/Grey/Upload.png" IconMove="/Resources/White/Upload.png" Header="正在上传">

        </metro:MetroMenuTabItem>
        <metro:MetroMenuTabItem Header="正在下载">

        </metro:MetroMenuTabItem>
        <metro:MetroMenuTabItem Header="传输完成">

        </metro:MetroMenuTabItem>
    </metro:MetroMenuTabControl>
</metro:MetroWindow>
