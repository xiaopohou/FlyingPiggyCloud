<Window x:Class="FlyingPiggyCloud.Views.MainFrameWork"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FlyingPiggyCloud.Views"
        mc:Ignorable="d"
        Title="MainFrameWork" MinHeight="600" MinWidth="800" d:DesignWidth="800" d:DesignHeight="600" Style="{DynamicResource MetroWindowStyle}" Name="ListWindow">
    <Window.Resources>
        <!--单选框的模板重写用于左边栏-->
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="/FlyingPiggyCloud;component/Resources/#Source Han Sans SC Normal"/>
            <Setter Property="Foreground" Value="#FF5A5A5A"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <!--<Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
                                </Grid>
                            </Border>-->
                            <Border x:Name="CheckedMask" Background="#FFE9E9E9" Opacity="0"/>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="10" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>-->
                                <Setter Property="Opacity" TargetName="CheckedMask" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>-->
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <!--<Setter Property="Opacity" TargetName="optionMark" Value="1"/>-->
                                <Setter Property="Opacity" TargetName="CheckedMask" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <!--<Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--最小化按钮样式-->
        <Style x:Key="WinMinBtnStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="MainBorder" Background="Transparent">
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="#33a58d"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--关闭按钮样式-->
        <Style x:Key="WinCloseBtnStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="MainBorder" Background="Transparent">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="#d44c45"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--窗体控件模板-->
        <ControlTemplate x:Key="MetroWindowTemplate" TargetType="{x:Type Window}">
            <Border Background="White">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Background="#FF2EC17C" MouseMove="Grid_MouseMove">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock x:Name="WindowTitleTbl" Grid.Column="0" Text="{TemplateBinding Title}" FontFamily="/FlyingPiggyCloud;component/Resources/#Source Han Sans SC Normal" VerticalAlignment="Center" FontSize="12" FontWeight="Bold" Margin="10,0" Foreground="White"/>
                        <Button x:Name="MinWinButton" Grid.Column="2" Style="{StaticResource WinMinBtnStyle}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Click="MinWinButton_Click">
                            <Button.Content>
                                <StackPanel>
                                    <Path Stroke="White" StrokeThickness="2" Data="M1,6 L18,6"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        
                        <Button x:Name="CloseWinButton" Grid.Column="3" Style="{StaticResource WinCloseBtnStyle}" Margin="2,0,8,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Click="CloseWinButton_Click">
                            <Button.Content>
                                <StackPanel>
                                    <Path Stroke="White" StrokeThickness="2" Data="M2,2 L16,16 M2,16 L16,2"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </Grid>

                    <AdornerDecorator Grid.Row="1">
                        <ContentPresenter/>
                    </AdornerDecorator>
                </Grid>
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="0" Color="#FF5A5A5A"/>
                </Border.Effect>
            </Border>
        </ControlTemplate>

        <Style x:Key="MetroWindowStyle" TargetType="{x:Type Window}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="Template" Value="{StaticResource MetroWindowTemplate}"/>
        </Style>

        <!-- Show Chat Window Animation -->
        <!--<Storyboard x:Key="showChatWindow">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Window" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:001" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ChatControl" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:001" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>-->


        <!-- Close Chat Window Animation -->
        <!--<Storyboard x:Key="hideChatWindow">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Window" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:001" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ChatControl" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:001" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>-->
        <local:LeftRadioButton x:Key="LeftRadioIsCheckdConvert"/>
    </Window.Resources>
    <Grid Background="#FFFFFFFF">
        <Frame Name="MainFrame" NavigationUIVisibility="Hidden" Margin="200,0,0,0"/>
        <Grid Background="#FFF5F5F5" HorizontalAlignment="Left" Width="200">
            <Grid Name="UserGrid" Height="160" Margin="0" VerticalAlignment="Top">
                <Border CornerRadius="50" BorderThickness="1" Height="75" Margin="0,29,0,0" VerticalAlignment="Top" Width="75">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0" BlurRadius="10" Color="#FF5A5A5A"/>
                    </Border.Effect>
                    <Border.Background>
                        <ImageBrush Stretch="Uniform" ImageSource="/FlyingPiggyCloud;component/Resources/BasicLogo.png"/>
                    </Border.Background>

                </Border>
                <TextBlock FontSize="8" Text="我是坑" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,108,0,0" FontFamily="/FlyingPiggyCloud;component/Resources/#Source Han Sans SC Normal" Foreground="#FF5A5A5A"/>
                <ProgressBar Value="50" HorizontalAlignment="Center" Height="5" Margin="0,124,0,0" VerticalAlignment="Top" Width="125"/>
            </Grid>
            <Border BorderBrush="#FFBFBFBF" BorderThickness="0,2,0,0" Margin="0,160,0,0">
                <StackPanel Name="LeftRadioButtonsGroup">
                    <TextBlock Text="我的文件" Margin="10" Foreground="#FF919191" FontFamily="/FlyingPiggyCloud;component/Resources/#Source Han Sans SC Normal"/>
                    <RadioButton IsChecked="{Binding CurrentPage, ConverterParameter=0, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Image Height="14" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/文件.png" Stretch="Fill"/>
                            <TextBlock TextWrapping="Wrap" Text="全部文件" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </RadioButton>
                    <RadioButton IsChecked="{Binding CurrentPage, ConverterParameter=1, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Image Height="14" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/图片.png" Stretch="Fill"/>
                            <TextBlock TextWrapping="Wrap" Text="图片" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </RadioButton>
                    <RadioButton IsChecked="{Binding CurrentPage, ConverterParameter=2, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Image Height="14" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/视频.png" Stretch="Fill"/>
                            <TextBlock TextWrapping="Wrap" Text="视频" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </RadioButton>
                    <TextBlock Text="传输列表" Margin="10" Foreground="#FF919191" FontFamily="/FlyingPiggyCloud;component/Resources/#Source Han Sans SC Normal"/>
                    <RadioButton IsChecked="{Binding CurrentPage, ConverterParameter=3, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Image Height="14" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/正在上传.png" Stretch="Fill"/>
                            <TextBlock TextWrapping="Wrap" Text="正在上传" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </RadioButton>
                    <RadioButton IsChecked="{Binding CurrentPage, ConverterParameter=4, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Image Height="14" Width="15" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/正在下载.png" Stretch="Fill"/>
                            <TextBlock TextWrapping="Wrap" Text="正在下载" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </RadioButton>
                    <RadioButton IsChecked="{Binding CurrentPage, ConverterParameter=5, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Image Height="14" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/完成.png" Stretch="Fill"/>
                            <TextBlock TextWrapping="Wrap" Text="传输完成" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </RadioButton>
                    <RadioButton IsChecked="{Binding CurrentPage, ConverterParameter=6, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Image Height="14" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/垃圾箱.png" Stretch="Fill"/>
                            <TextBlock TextWrapping="Wrap" Text="垃圾箱" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </RadioButton>
                </StackPanel>
            </Border>
        </Grid>
        
    </Grid>
</Window>
