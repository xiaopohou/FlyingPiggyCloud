<metro:MetroWindow
        xmlns:metro="clr-namespace:Arthas.Controls.Metro;assembly=Arthas"
        x:Class="FlyingPiggyCloud.Views.MainFrameWork"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FlyingPiggyCloud.Views"
        mc:Ignorable="d"
        Title="祝你越来越6" MinHeight="550" MinWidth="800" d:DesignWidth="800" d:DesignHeight="600" Name="ListWindow" BorderBrush="White" TitleForeground="{StaticResource MainFocusColorBrush}">
    <metro:MetroWindow.Resources>

        <local:LeftRadioButtonIcon x:Key="LeftRadioButtonIcon"/>

        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!--重写单选框的模板用于左边栏-->
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#FF5A5A5A"/>
            <Setter Property="Margin" Value="10,0,5,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border CornerRadius="5" x:Name="CheckedMask" Opacity="0"/>
                            <ContentPresenter Margin="5,5" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" TargetName="CheckedMask" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="CheckedMask" Value="1"/>
                                <Setter Property="Background" TargetName="CheckedMask" Value="#FF61BF82"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <local:LeftRadioButton x:Key="LeftRadioIsCheckdConvert"/>
        <!--重写的ProgressBar拥有圆角-->
        <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2.5"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </metro:MetroWindow.Resources>
    <metro:MetroWindow.Menu>
        <metro:MetroTitleMenu>
            <metro:MetroTitleMenuItem Icon="/Resources/Green/More.png" Foreground="{StaticResource MainFocusColorBrush}">
                <metro:MetroTitleMenuItem x:Name="Settings" Icon="/Resources/Green/Set.png" Header="功能设置" Foreground="{StaticResource MainFocusColorBrush}" Click="Settings_Click"/>
                <!--<metro:MetroTitleMenuItem Header="退出登陆" Foreground="{StaticResource MainFocusColorBrush}"/>-->
                <metro:MetroTitleMenuItem x:Name="About" Icon="/Resources/Green/About.png" Header="关于6盘" Foreground="{StaticResource MainFocusColorBrush}"/>
                <metro:MetroTitleMenuItem x:Name="Logout" Header="退出登陆" Foreground="{StaticResource MainFocusColorBrush}" Click="Logout_Click"/>
            </metro:MetroTitleMenuItem>
        </metro:MetroTitleMenu>
    </metro:MetroWindow.Menu>
    <Grid>
        <Grid Background="#FFFFFFFF">
            <Frame Name="MainFrame" NavigationUIVisibility="Hidden" Margin="160,0,0,0"/>
            <Border  HorizontalAlignment="Left" Width="160">
                <Grid Background="#FFE3E4E8">
                    <!--用户信息区域-->
                    <Grid Name="UserGrid" Height="160" Margin="0" VerticalAlignment="Top">
                        <!--用户头像-->
                        <Border CornerRadius="50" BorderThickness="1" Height="50" Margin="0,30,0,0" VerticalAlignment="Top" Width="50">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="10" Color="#FF5A5A5A"/>
                            </Border.Effect>
                            <Border.Background>
                                <ImageBrush ImageSource="/FlyingPiggyCloud;component/Resources/175585969.jpg" Stretch="UniformToFill"/>
                            </Border.Background>
                        </Border>

                        <!--用户名-->
                        <TextBlock x:Name="textBlock" Text="{Binding Name,Mode=OneTime}" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,90,0,0" Foreground="#FF5A5A5A"/>

                        <!--剩余容量-->
                        <ProgressBar ToolTip="{Binding FrendlySpaceCapacity}" Value="{Binding Progress,Mode=OneTime}" HorizontalAlignment="Center" Height="5" Margin="0,124,0,0" VerticalAlignment="Top" Width="125" Style="{DynamicResource ProgressBarStyle}"/>
                    </Grid>

                    <!--左侧导航栏区域-->
                    <Border Margin="0,160,0,50">
                        <metro:MetroScrollViewer>
                            <StackPanel Name="LeftRadioButtonsGroup">
                                <TextBlock Text="传输列表" Margin="10" Foreground="#FF919191"/>
                                <RadioButton x:Name="radioButton3" IsChecked="{Binding CurrentPage, ConverterParameter=3, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <Image Height="16" Margin="0,0,5,0" Source="{Binding IsChecked, ConverterParameter=Upload.png, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton3, Mode=OneWay}" Stretch="Fill"/>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding UploadLabel,Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{Binding IsChecked, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton3, Mode=OneWay}"/>
                                    </StackPanel>
                                </RadioButton>

                                <RadioButton x:Name="radioButton4" IsChecked="{Binding CurrentPage, ConverterParameter=4, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <Image Height="16" Margin="0,0,5,0" Source="{Binding IsChecked, ConverterParameter=Download.png, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton4, Mode=OneWay}" Stretch="Fill"/>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding DownloadLabel,Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{Binding IsChecked, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton4, Mode=OneWay}"/>
                                    </StackPanel>
                                </RadioButton>

                                <RadioButton x:Name="radioButton5" IsChecked="{Binding CurrentPage, ConverterParameter=5, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <Image Height="16" Margin="0,0,5,0" Source="{Binding IsChecked, ConverterParameter=Exchange.png, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton5, Mode=OneWay}" Stretch="Fill"/>
                                        <TextBlock TextWrapping="Wrap" Text="传输完成" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{Binding IsChecked, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton5, Mode=OneWay}"/>
                                    </StackPanel>
                                </RadioButton>

                                <!--<RadioButton x:Name="radioButton6" IsChecked="{Binding CurrentPage, ConverterParameter=6, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <Image Height="16" Margin="0,0,5,0" Source="{Binding IsChecked, ConverterParameter=Clean.png, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton6, Mode=OneWay}" Stretch="Fill"/>
                                        <TextBlock TextWrapping="Wrap" Text="垃圾箱" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{Binding IsChecked, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton6, Mode=OneWay}"/>
                                    </StackPanel>
                                </RadioButton>-->

                                <Border Height="28"/>

                                <TextBlock Text="我的文件" Margin="10" Foreground="#FF919191"/>
                                <RadioButton x:Name="radioButton" IsChecked="{Binding CurrentPage, ConverterParameter=0, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <Image Height="16" Margin="0,0,5,0" Source="{Binding IsChecked, ConverterParameter=Home.png, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton, Mode=OneWay}" Stretch="Fill"/>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding Text, ElementName=textBlock, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{Binding IsChecked, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton, Mode=OneWay}"/>
                                    </StackPanel>
                                </RadioButton>

                                <RadioButton x:Name="radioButton1" IsChecked="{Binding CurrentPage, ConverterParameter=1, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <Image Height="16" Margin="0,0,5,0" Source="{Binding IsChecked, ConverterParameter=Camera.png, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton1,Mode=OneWay}" Stretch="Fill"/>
                                        <TextBlock TextWrapping="Wrap" Text="图片" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{Binding IsChecked, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton1, Mode=OneWay}"/>
                                    </StackPanel>
                                </RadioButton>

                                <RadioButton x:Name="radioButton2" IsChecked="{Binding CurrentPage, ConverterParameter=2, Converter={StaticResource LeftRadioIsCheckdConvert}, Mode=TwoWay}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <Image Height="16" Margin="0,0,5,0" Source="{Binding IsChecked, ConverterParameter=Movie.png, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton2, Mode=OneWay}" Stretch="Fill"/>
                                        <TextBlock TextWrapping="Wrap" Text="视频" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{Binding IsChecked, Converter={StaticResource LeftRadioButtonIcon}, ElementName=radioButton2}"/>
                                    </StackPanel>
                                </RadioButton>
                                <Border Height="28"/>

                                <TextBlock Text="快速导航" Margin="10" Foreground="#FF919191"/>


                            </StackPanel>
                        </metro:MetroScrollViewer>
                    </Border>

                    <!--底部不知道干什么区域-->
                    <!--<Grid Height="50" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
                        <TextBlock Foreground="{StaticResource MainFocusColorBrush}" Text="底部不知道干什么区域"/>
                    </Grid>-->
                </Grid>
            </Border>
        </Grid>
    </Grid>
</metro:MetroWindow>
