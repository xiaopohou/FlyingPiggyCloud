<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:FlyingPiggyCloud.Views"
      xmlns:Controllers="clr-namespace:FlyingPiggyCloud.Controllers"
    xmlns:metro="clr-namespace:Arthas.Controls.Metro;assembly=Arthas" x:Class="FlyingPiggyCloud.Views.UploadingListPage"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="UploadingListPage">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/FlyingPiggyCloud;component/Resources/ControlStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <Controllers:SizeCalculatorConverter x:Key="SizeCalculatorConverter"/>
            
            <DataTemplate x:Key="FileName">
                <TextBlock Text="{Binding FileName}"/>
            </DataTemplate>

            <DataTemplate x:Key="Size">
                <TextBlock Text="{Binding Total, Mode=OneWay}"/>
            </DataTemplate>

            <DataTemplate x:Key="Uploaded">
                <TextBlock Text="{Binding Uploaded, Mode=OneWay}"/>
            </DataTemplate>

            <DataTemplate x:Key="Progress">
                <metro:MetroProgressBar ToolTip="{Binding Status, Mode=OneWay}" Value="{Binding Progress, Mode=OneWay}" Height="15"/>
            </DataTemplate>

            <DataTemplate x:Key="Operates">
                <StackPanel Orientation="Horizontal">
                    <Button Margin="5,0" Content="&#xf05e;" FontSize="18" Style="{StaticResource LightButtonDesign}" ToolTip="这个按钮可以帮你取消上传任务" Click="Button_Click" BorderBrush="DarkRed"/>

                </StackPanel>
            </DataTemplate>

            <Style x:Key="alternatingStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="true">
                                <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="11"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <!--<Rectangle x:Name="UpperHighlight" Fill="#75FFFFFF" Visibility="Collapsed"/>-->
                                        <GridViewRowPresenter Grid.RowSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <!--<Setter Property="Background" Value="{StaticResource ListItemHoverFill}"/>-->
                                    <Setter Property="BorderBrush" Value="#FF2EC17C"/>
                                    <!--<Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>-->
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <!--<Setter Property="Background" Value="{StaticResource ListItemSelectedFill}"/>-->
                                    <Setter Property="BorderBrush" Value="#FF2EC17C"/>
                                    <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                                    <!--<Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                    <Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF"/>-->
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <!--<Setter Property="Background" Value="{StaticResource ListItemSelectedInactiveFill}"/>-->
                                    <Setter Property="BorderBrush" Value="#FFCFCFCF"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="IsMouseOver" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <!--<Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}"/>-->
                                    <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="#FFFFFFFF"/>
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="#FFF5F5F5"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#FF2EC17C"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Page.Resources>
    <Grid>
        <Grid Background="White" Height="60" Margin="0" VerticalAlignment="Top">
            <Button x:Name="CancelAll" Width="111" Height="25" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource ButtonBasicDesign}" Margin="97,0,0,0" Background="#FFFFFF" Click="CancelAll_Click" >
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Height="16" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/Grey/Clean.png"/>
                    <TextBlock Text="全部取消" Foreground="#5A5A5A"/>
                </StackPanel>
            </Button>
        </Grid>
        
        <ListView Background="White"  ItemContainerStyle="{StaticResource alternatingStyle}" x:Name="UploadList" Margin="0,60,0,0">
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperFileName}" CellTemplate="{StaticResource FileName}" Header="文件名"/>
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperSize}" CellTemplate="{StaticResource Size}" Header="总尺寸"/>
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperStatus}" CellTemplate="{StaticResource Uploaded}" Header="已完成"/>
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperPrograss}" CellTemplate="{StaticResource Progress}" Header="进度"/>
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperOperator}" CellTemplate="{StaticResource Operates}" Header="操作"/>
                </GridView>
            </ListView.View>
        </ListView>
        
        <Grid VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="WidthHelperFileName" Grid.Column="0"/>
            <Grid x:Name="WidthHelperSize" Grid.Column="1"/>
            <Grid x:Name="WidthHelperStatus" Grid.Column="2"/>
            <Grid x:Name="WidthHelperPrograss" Grid.Column="3"/>
            <Grid x:Name="WidthHelperOperator" Grid.Column="4"/>
        </Grid>
    </Grid>
</Page>
