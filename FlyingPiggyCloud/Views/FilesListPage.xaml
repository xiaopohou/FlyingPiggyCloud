<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:FlyingPiggyCloud.Views"
      xmlns:Controllers="clr-namespace:FlyingPiggyCloud.Controllers"
      xmlns:metro="clr-namespace:Arthas.Controls.Metro;assembly=Arthas"
      xmlns:uc="clr-namespace:FlyingPiggyCloud.UserControls"
      x:Name="page"
      x:Class="FlyingPiggyCloud.Views.FilesListPage"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="FilesListPage">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/FlyingPiggyCloud;component/Resources/ControlStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key ="{x:Static SystemColors.HighlightBrushKey}" Color ="Red"/>

            <Controllers:KeyboardFocusToVisibilityConverter x:Key="KeyboardFocusToVisibilityConverter"/>

            <!--ListView的斑马纹-->
            <Style x:Key="alternatingStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="BorderThickness" Value="0"/>
                <EventSetter Event="Control.MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
                <EventSetter Event="Unselected" Handler="ListViewItem_Unselected"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Border x:Name="InnerBorder" CornerRadius="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="11"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <GridViewRowPresenter Grid.RowSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="#FFF5F5F5"/>
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="#FFFFFFFF"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FFE3E4E8"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#FFE3E4E8"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="MetaName">
                <Grid>
                    <Image Width="24" Margin="4" Source="{Binding Icon}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <uc:RenamableTextBox TextAreaMaxWidth="{Binding ActualWidth, ElementName=WidthHelperRenameTextBox,Mode=OneWay}" IsInputing="{Binding IsRename,Mode=TwoWay}" HorizontalAlignment="Left" Margin="34,0,0,0" VerticalAlignment="Center" MinWidth="{Binding ActualWidth, ElementName=WidthHelperRenameTextBox,Mode=OneWay}" Text="{Binding Name, Mode=OneTime}" Cancel="RenamableTextBox_Cancel" Confirm="RenamableTextBox_Confirm"/>
                    <Button Content="&#xf063;" FontSize="12" Visibility="Collapsed" x:Name="DownloadBotton" Style="{StaticResource LightButtonDesign}" Click="DownloadBotton_Click" HorizontalAlignment="Right" Margin="0,0,38,0" VerticalAlignment="Center"/>
                    <Button Content="&#xf141;" FontSize="12" Visibility="Collapsed" x:Name="MoreBotton" Style="{StaticResource LightButtonDesign}" HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Center" Click="MoreBotton_Click">
                        <Button.ContextMenu>
                            <metro:MetroContextMenu x:Name="MoreButtonMenu" Background="{StaticResource MainFocusColorBrush}" Foreground="White">
                                <MenuItem x:Name="Cut" Header="剪切" Click="Cut_Click">
                                    <MenuItem.Icon>
                                        <Image Source="/FlyingPiggyCloud;component/Resources/White/Cut.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem x:Name="Copy" Header="复制" Click="Copy_Click">
                                    <MenuItem.Icon>
                                        <Image Source="/FlyingPiggyCloud;component/Resources/White/Copy.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem x:Name="Rename" Header="重命名" Click="Rename_Click">
                                    <MenuItem.Icon>
                                        <Image Source="/FlyingPiggyCloud;component/Resources/White/Rename.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem x:Name="Delete" Header="删除" Click="Delete_Click">
                                    <MenuItem.Icon>
                                        <Image Source="/FlyingPiggyCloud;component/Resources/White/Clean.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </metro:MetroContextMenu>
                        </Button.ContextMenu>
                    </Button>
                </Grid>
                <DataTemplate.Triggers>
                    <!--选中时显示附加按钮-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="True"/>
                            <Condition Binding="{Binding Type}" Value="0" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="DownloadBotton" Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="MoreBotton" Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="MetaSize">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Foreground="#FF5A5A5A" Text="{Binding Size}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="MetaMTime">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Foreground="#FF5A5A5A" Text="{Binding MTime}"/>
                </StackPanel>
            </DataTemplate>

            <Style x:Key="AddressBarItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="4,1"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource MainFocusColorBrush}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource MainFocusColorBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="#3DDADADA"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="#3D61BF83"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FF61BF83"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Page.Resources>
    <Grid>
        <!--上方栏-->
        <Grid Background="White" Height="60" Margin="0" VerticalAlignment="Top">
            <Button x:Name="Stick" HorizontalAlignment="Left" Width="81" VerticalAlignment="Center" Style="{StaticResource ButtonBasicDesign}" Margin="600,0,0,0" Background="#FFFFFFFF" Click="Stick_Click">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Height="15" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/Grey/Stick.png"/>
                    <TextBlock Text="粘贴" Foreground="#FF5A5A5A"/>
                </StackPanel>
            </Button>
            <Button x:Name="Copy" HorizontalAlignment="Left" Width="81" VerticalAlignment="Center" Style="{StaticResource ButtonBasicDesign}" Margin="693,0,0,0" Background="#FFFFFFFF" Click="Copy_Click">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Height="15" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/Grey/Copy.png"/>
                    <TextBlock Text="复制" Foreground="#FF5A5A5A"/>
                </StackPanel>
            </Button>
            <Button x:Name="Cut" HorizontalAlignment="Left" Width="81" VerticalAlignment="Center" Style="{StaticResource ButtonBasicDesign}" Margin="507,0,0,0" Background="#FFFFFFFF" Click="Cut_Click">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Height="15" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/Grey/Cut.png"/>
                    <TextBlock Text="剪切" Foreground="#FF5A5A5A"/>
                </StackPanel>
            </Button>
            
            <Button x:Name="NewFolderButton" HorizontalAlignment="Left" Width="125" VerticalAlignment="Center" Style="{StaticResource ButtonBasicDesign}" Margin="370,0,0,0" Background="#FFFFFFFF" Click="NewFolderButton_Click">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Height="15" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/BasicIcons/tianjiashangpin.png"/>
                    <TextBlock Text="新建文件夹" Foreground="#FF5A5A5A"/>
                </StackPanel>
            </Button>
            <Button x:Name="UploadButton" HorizontalAlignment="Left" VerticalAlignment="Center" Width="125" Style="{StaticResource ButtonBasicDesign}" Margin="96,0,0,0" Background="{StaticResource MainFocusColorBrush}" BorderBrush="{StaticResource MainFocusColorBrush}" Click="UploadButton_Click">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Height="15" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/上传.png"/>
                    <TextBlock Text="上传文件" Foreground="#FFFFFFFF"/>
                </StackPanel>
            </Button>
            <Button x:Name="UploadFolderButton" HorizontalAlignment="Left" VerticalAlignment="Center" Width="125" Style="{StaticResource ButtonBasicDesign}" Margin="233,0,0,0" Background="{StaticResource MainFocusColorBrush}" BorderBrush="{StaticResource MainFocusColorBrush}" Click="UploadFolderButton_Click">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Height="15" Margin="0,0,5,0" Source="/FlyingPiggyCloud;component/Resources/上传.png"/>
                    <TextBlock Text="上传文件夹" Foreground="#FFFFFFFF"/>
                </StackPanel>
            </Button>

            <Button x:Name="Previous" Background="White" HorizontalAlignment="Left" VerticalAlignment="Center" Width="25" Height="25" Style="{StaticResource ButtonBasicDesign}" Margin="10,0,0,0" Click="Previous_Click">
                <Image Margin="3" Source="/FlyingPiggyCloud;component/Resources/BasicIcons/fanhui.png" Stretch="Fill"/>
            </Button>
            <Button x:Name="Next" Background="White" HorizontalAlignment="Left" VerticalAlignment="Center" Width="25" Height="25" Style="{StaticResource ButtonBasicDesign}" Margin="40,0,0,0" Click="Next_Click">
                <Image Margin="3" Source="/FlyingPiggyCloud;component/Resources/BasicIcons/jinru.png" Stretch="Fill"/>
            </Button>
        </Grid>

        <!--地址栏-->
        <ListBox x:Name="AddressBar" Margin="0,60,0,0" Height="24" VerticalAlignment="Top" SelectionChanged="AddressBar_SelectionChanged" BorderBrush="{x:Null}" ItemContainerStyle="{DynamicResource AddressBarItemStyle}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Foreground="#FF5A5A5A" Text="{Binding}"/>
                        <Image Height="11" Source="/Resources/next.png"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <ListView ScrollViewer.ScrollChanged="FileListView_ScrollChanged" Background="White" x:Name="FileListView" Margin="0,84,0,0" ItemContainerStyle="{StaticResource alternatingStyle}" AlternationCount="2">
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperFlieName,Mode=OneWay}" CellTemplate="{StaticResource MetaName}" Header="文件名" />
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperFileSize}" CellTemplate="{StaticResource MetaSize}" Header="大小"/>
                    <GridViewColumn Width="{Binding ActualWidth, ElementName=WidthHelperMTime}" CellTemplate="{StaticResource MetaMTime}" Header="修改时间"/>
                </GridView>
            </ListView.View>
        </ListView>
        
        <!--这个Grid用于帮助GridView自动校正分栏宽度-->
        <Grid Visibility="Hidden">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Grid.ColumnSpan="2" x:Name="WidthHelperFlieName"/>
            <Grid Grid.Column="0" x:Name="WidthHelperRenameTextBox"/>
            <Grid Grid.Column="2" x:Name="WidthHelperFileSize"/>
            <Grid Grid.Column="3" x:Name="WidthHelperMTime"/>
        </Grid>
    </Grid>
</Page>
